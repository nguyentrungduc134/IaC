#ansible also have cloud module to use cloud API (aws, digitalacean)
#dynamic inventory using result of python script to get list of servers -i file.py
#prt: use dynamic inventory to provision PaaS (like apache Solr)
solr just vagrant up
#using serial run (fork) to gurantee no down time when deploying, can be number of percentage
#ansible config show in --version and can be inited
You can generate a fully commented-out example ansible.cfg file, for example:
#some typing error like space in {{ }} variable could lead to weird error
#ash: script to auto add ssh key access for ansible
ssh-keygen -f 
sshpass -p 
#first-ansible-playbook: test chrony by dnf and service module, all host in vagrant provision
#drupal is a free and open-source content-management framework that can be tailored and customized to simple websites or complex web applications
#nodejs It is used for server-side programming, and primarily deployed for non-blocking, event-driven servers, such as traditional web sites and back-end API services, but was originally designed with real-time, push-based architectures in mind
#Adding extra package repositories (yum or apt) is one thing many admins will do before any other
work on a server to ensure that certain packages are available, or are at a later version than the ones
in the base installation
#Ansible makes things a little more robust. Even though the following is slightly more verbose, it
performs the same actions in a more structured way, which is simpler to understand, and works
with variables other nifty Ansible features we’ll discuss later
#yum installs Node.js (along with all the required packages for npm, Node’s package manager) if
it’s not present, and allows the EPEL repo to be searched via the enablerepo parameter (you
could also explicitly disable a repository using disablerepo).
#dependecies like php may require latter versions
