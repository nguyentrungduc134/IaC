#Extending things a little further, many organizations use blue-green deployments.
The basic concept involves bringing up a parallel production infrastructure, then
switching over to it. The cutover may take only a few milliseconds and no active
production infrastructure is ever offline during the deployment process
#Another important aspect of a successful deployment is communication. If you’re
running playbooks as part of a CI/CD process, or in some other automated fashion,
use one of the many built-in Ansible notification modules to share the deployment’s
progress via chat, email, or even text-to-speech on your Mac with the osx_say
module! Ansible includes easy-to-use notification modules for:
#prt: provision ansible tower
#prt: provision jenkins server
#prt: Create a Jenkins job to run an Ansible Playbook
#Unit testing, when applied to applications, is testing of the smallest units of code
(usually functions or class methods). In Ansible, unit testing would typically apply
to individual playbooks. You could run individual playbooks in an isolated environment, but it’s often not worth the effort. What is worth your effort is at least checking
the playbook syntax, to make sure you didn’t just commit a YAML file that will break
an entire deployment because of a missing quotation mark, or a whitespace issue!
#Integration testing, which is definitely more valuable when it comes to Ansible, is
the testing of small groupings of individual units of code, to make sure they work
correctly together. Breaking your infrastructure definition into many task-specific
roles and playbooks allows you to do this; if you’ve structured your playbooks so
they have no or limited dependencies, you could 
#Functional testing involves the whole shebang. Basically, you set up a complete
infrastructure environment, and then run tests against it to make sure everything was
successfully installed, deployed, and configured. Ansible’s own reporting is helpful
in this kind of testing, and there are external tools available to test infrastructure
even more deeply
