1a
#lineinfile check to see if there is this line, can be used with regex
#chdir, create in command, shell module chdir: run at this dir, create: not run if this file exists
#include can use include other playbooks
---
b
#inventory file /etc/ansible/hosts
include host group, single host must put above group
#need to have ssh key access first to run any simple command
#basic playbook
--- YAML start, host:all host to run, tasks: task to run, name: task, yum: module

c
#inventory multi group [multi:children] [multi:vars]
#default run parallel, limit using fork -f
#run multi host, all or limit
---
2a
#idempotence: check before running, reusable
#with_items: variable list
#state: state of service
---
b
# playbook: --limit limit host, --list-hosts
#remote-user(-u) --become: sudo run, --become-user: run sudo with user
#--inventory(-i) specify intentory, -e --extra-vars
---
c
#App .js and npm read json to install dependencies
#register: used to decide latter whether to run
#changed_when: specify the condition of change to ansible
---
3a
LAMP
#when: specify the condition to do something
#pre_task, post_task, seperate with main task
#handler: at the end, trigger by  notify of changed from a task
---
b
#file module can create file and link
#Jinja2 template can use variable in it to provide apache config
#failed_when: specify condition of fail to ansible
---
c
#ignore_errors: ignore known error
#delegate_to: delegate task to other hosts
#local_action: task run at localhost
4a
#ansible-galaxy init role name to init tree of the role
#role help easy to see run  process, copy codes with same part to the role and replace
#default dir have default var, easily be replaced in the main playbook, var dir have higher precedence
b
#ansible also have cloud module to use cloud API (aws, digitalacean)
#dynamic inventory using result of python script to get list of servers -i file.py
#use dynamic inventory to provision PaaS (like apache Solr)
---
#using serial run (fork) to gurantee no down time when deploying, can be number of percentage
#ansible config show in --version and can be inited
https://docs.ansible.com/ansible/latest/reference_appendices/config.html
#some typing error like space in {{ }} variable could lead to weird error
4,
---
#ash: script to auto add ssh key access for ansible
ssh-keygen -f ~/.ssh/known_hosts -R 192.168.56.69
sshpass -p 123456 ssh-copy-id -o StrictHostKeyChecking=no root@192.168.56.69
#first-ansible-playbook: test chrony by dnf and service module, all host in vagrant provision
#drupal is a free and open-source content-management framework that can be tailored and customized to simple websites or complex web applications
---
#nodejs It is used for server-side programming, and primarily deployed for non-blocking, event-driven servers, such as traditional web sites and back-end API services, but was originally designed with real-time, push-based architectures in mind
#Adding extra package repositories (yum or apt) is one thing many admins will do before any other
work on a server to ensure that certain packages are available, or are at a later version than the ones
in the base installation
#Ansible makes things a little more robust. Even though the following is slightly more verbose, it
performs the same actions in a more structured way, which is simpler to understand, and works
with variables other nifty Ansible features we’ll discuss late
---
#
yum installs Node.js (along with all the required packages for npm, Node’s package manager) if
it’s not present, and allows the EPEL repo to be searched via the enablerepo parameter (you
could also explicitly disable a repository using disablerepo).
#dependecies lIke phố máy require latter versions



Practical:
#build lamp on aws
