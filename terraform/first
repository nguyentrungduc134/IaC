1
---
#first export aws access key to .bashrc file
##terraform init create configuration and provider plugins
#to provision create main.tf , terraform plan, terraform init
---
#use user_data to configure script run
#terraform use implicit dependencies, parses these dependencies, builds a dependency graph from them
#terraform use variable to use in and out of the code
---
#use aws_autoscaling_group with aws_launch_configuration to provide autoscaling
#use lifecycle create_before_destroy when you replace an instance that is a dependency
#data source add api data and make it available in the rest of the code, other source call it's attributes
--
2
---
#terraform save state and diff to apply change
#should not save state in version control but best in cloud storage
#terraform use workspaces to store multiple seperate states
---
#shoud use different folder for: stage or prod, components(web,db) and use seperate backend storage (s3)
#could seperate .tf file because terraform just read .tf file
#terraform_remote_state is terraform data source that take output of other resource state
---
#file reads a file from disk and returns its literal contents without any template interpretation.
#templatefile is a function read file (bash script) and use variable to create template
templatefile(path, vars)
