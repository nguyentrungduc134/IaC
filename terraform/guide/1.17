templatefile reads the file at the given path and renders its content as a template using a supplied set of template variables.

templatefile(path, vars)
Copy
The template syntax is the same as for string templates in the main Terraform language, including interpolation sequences delimited with ${ ... }. This function just allows longer template sequences to be factored out into a separate file for readability.

The "vars" argument must be an object. Within the template file, each of the keys in the map is available as a variable for interpolation. The template may also use any other function available in the Terraform language, except that recursive calls to templatefile are not permitted. Variable names must each start with a letter, followed by zero or more letters, digits, or underscores.

Strings in the Terraform language are sequences of Unicode characters, so this function will interpret the file contents as UTF-8 encoded text and return the resulting Unicode characters. If the file contains invalid UTF-8 sequences then this function will produce an error.

This function can be used only with files that already exist on disk at the beginning of a Terraform run. Functions do not participate in the dependency graph, so this function cannot be used with files that are generated dynamically during a Terraform operation.

*.tftpl is the recommended naming pattern to use for your template files. Terraform will not prevent you from using other names, but following this convention will help your editor understand the content and likely provide better editing experience as a result.
